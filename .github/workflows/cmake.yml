name: CMake

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    environment: CI
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Install Dependencies
      shell: bash
      run: sudo apt-get install libusb-1.0-0-dev libssl-dev libboost-test-dev libboost-dev autoconf automake libtool curl make g++ unzip libprotobuf-dev protobuf-compiler lcov
    
    - name: Install ASIO
      shell: bash
#       run: wget -O asio-1.18.1.tar.bz2 https://sourceforge.net/projects/asio/files/asio/1.18.1%20%28Stable%29/asio-1.18.1.tar.bz2/download && tar xvf asio-1.18.1.tar.bz2 && cd asio-1.18.1 &&  ./configure && make && sudo make install && sudo ldconfig
      run: wget https://launchpad.net/ubuntu/+archive/primary/+files/libasio-dev_1.18.1-1_all.deb && sudo dpkg -i libasio-dev_1.18.1-1_all.deb
      
    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{github.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DAASDK_TEST=true -DAASDK_BUILD_SHARED=ON -DAASDK_CODE_COVERAGE=ON

    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE

    - name: Test
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest
      
    - name: Coverage
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: bash <(curl -s https://codecov.io/bash)
